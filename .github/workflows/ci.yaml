name: Build and Upload the pip package and Deploy the docker image
on:
  release:
    types:
      - released

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build pip package
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      
      - name: Extract tag name
        id: tag
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT

      - name: Update version in setup.py
        run: >-
          sed -i "s/0.0.0/${{ steps.tag.outputs.TAG_NAME }}/g" setup.py
      
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel 
          twine upload dist/*

  build-docker:
    name: Build Docker container
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Check out source code
        uses: actions/checkout@v3

      - id: setup-buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: build
        name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ format('{0}/programmatic-interface:{1}', secrets.DOCKER_USERNAME, github.event.release.tag_name) }}
          push: true

  report-if-failed:
    name: Report if workflow failed
    runs-on: ubuntu-latest
    needs: [build, build-docker]
    if: failure() && github.ref == 'refs/heads/master'
    steps:
      - id: send-to-slack
        name: Send failure notification to Slack on failure
        env:
          SLACK_BOT_TOKEN: ${{ secrets.WORKFLOW_STATUS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: workflow-failures
          status: FAILED
          color: danger